{
  "Resources": {
    "UserPool6BA7E5F2": {
      "Type": "AWS::Cognito::UserPool",
      "Properties": {
        "AccountRecoverySetting": {
          "RecoveryMechanisms": [
            {
              "Name": "verified_phone_number",
              "Priority": 1
            },
            {
              "Name": "verified_email",
              "Priority": 2
            }
          ]
        },
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": true
        },
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "VerificationMessageTemplate": {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "UserPoolClient2F5918F7": {
      "Type": "AWS::Cognito::UserPoolClient",
      "Properties": {
        "UserPoolId": {
          "Ref": "UserPool6BA7E5F2"
        },
        "AllowedOAuthFlows": [
          "implicit",
          "code"
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin"
        ],
        "CallbackURLs": [
          "https://example.com"
        ],
        "GenerateSecret": true,
        "SupportedIdentityProviders": [
          "COGNITO"
        ]
      }
    },
    "SecretA720EF05": {
      "Type": "AWS::SecretsManager::Secret",
      "Properties": {
        "GenerateSecretString": {}
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "UserPoolClientSecretOnEventHandlerServiceRole058BB361": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "UserPoolClientSecretOnEventHandlerServiceRoleDefaultPolicyE0759948": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:DescribeUserPoolClient",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "UserPool6BA7E5F2",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "secretsmanager:PutSecretValue",
                "secretsmanager:UpdateSecret"
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "SecretA720EF05"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "UserPoolClientSecretOnEventHandlerServiceRoleDefaultPolicyE0759948",
        "Roles": [
          {
            "Ref": "UserPoolClientSecretOnEventHandlerServiceRole058BB361"
          }
        ]
      }
    },
    "UserPoolClientSecretOnEventHandler161B223E": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "1a0fd4c80fbde770903d6285503a74099ec42c7eb5005fe2ad59ee010e9bb958.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "UserPoolClientSecretOnEventHandlerServiceRole058BB361",
            "Arn"
          ]
        },
        "Description": "src/user-pool-client-secret.lambda.ts",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "UserPoolClientSecretOnEventHandlerServiceRoleDefaultPolicyE0759948",
        "UserPoolClientSecretOnEventHandlerServiceRole058BB361"
      ]
    },
    "UserPoolClientSecretProviderframeworkonEventServiceRole718232DC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "UserPoolClientSecretProviderframeworkonEventServiceRoleDefaultPolicyC9A154E0": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "UserPoolClientSecretOnEventHandler161B223E",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "UserPoolClientSecretProviderframeworkonEventServiceRoleDefaultPolicyC9A154E0",
        "Roles": [
          {
            "Ref": "UserPoolClientSecretProviderframeworkonEventServiceRole718232DC"
          }
        ]
      }
    },
    "UserPoolClientSecretProviderframeworkonEventA9EB21DA": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "UserPoolClientSecretProviderframeworkonEventServiceRole718232DC",
            "Arn"
          ]
        },
        "Description": "AWS CDK resource provider framework - onEvent (integ-cdk-congito-secret/UserPoolClientSecret/Provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "UserPoolClientSecretOnEventHandler161B223E",
                "Arn"
              ]
            }
          }
        },
        "Handler": "framework.onEvent",
        "Runtime": "nodejs12.x",
        "Timeout": 900
      },
      "DependsOn": [
        "UserPoolClientSecretProviderframeworkonEventServiceRoleDefaultPolicyC9A154E0",
        "UserPoolClientSecretProviderframeworkonEventServiceRole718232DC"
      ]
    },
    "UserPoolClientSecretCustomResource68FA8F0A": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "UserPoolClientSecretProviderframeworkonEventA9EB21DA",
            "Arn"
          ]
        },
        "userPoolId": {
          "Ref": "UserPool6BA7E5F2"
        },
        "userPoolClientId": {
          "Ref": "UserPoolClient2F5918F7"
        },
        "secretArn": {
          "Ref": "SecretA720EF05"
        },
        "issuer": {
          "Fn::GetAtt": [
            "UserPool6BA7E5F2",
            "ProviderURL"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}